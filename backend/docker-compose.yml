services:
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: group_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: .
    command: gunicorn mini_netumo.wsgi:application --bind 0.0.0.0:8000
    working_dir: /app
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    env_file: .env
    depends_on:
      - db
      - redis

  worker:
    build: .
    command: celery -A mini_netumo worker -l info
    working_dir: /app
    volumes:
      - ./backend:/app
    env_file: .env
    depends_on:
      - backend
      - redis

  beat:
    build: .
    command: celery -A mini_netumo beat -l info
    working_dir: /app
    volumes:
      - ./backend:/app
    env_file: .env
    depends_on:
      - backend
      - redis

  vue-frontend:
    build: .
    ports:
      - "3001:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - vue-frontend

  backup:
    build: ./backup/cron
    volumes:
      - pg_backup:/backups
    environment:
      POSTGRES_DB: group_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_HOST: db
    depends_on:
      - db

volumes:
  pgdata:
  pg_backup: